# The type of the running node, can be set with 'dataOwner' or 'storage'.
type = "storage"

#########################################################################
#
#  [storage] defines features of a storage node.
#
#########################################################################
[storage]
# Define a name of the node, for readability
name = "node1"

# The Address this server will listen on
listenAddress = ":8122"

# The private key of the node.
# Different key express different identity.
# Only need to choose one from 'privateKey' and 'keyPath', and if both exist, 'keyPath' takes precedence over 'privateKey'
# privateKey = "5572e2fa0c259fe798e5580884359a4a6ac938cfff62d027b90f2bac3eceef79"
keyPath = "./keys"

# The endpoint can be connected by other node, and showed in blockchain.
# If your network mode is 'host', it is the machine's ip and the port in publicAddress in before section.
publicAddress = "10.144.94.17:8122"

# Blockchain used by the storage node.
[storage.blockchain]
    # blockchain type, 'xchain' or 'fabric'
    type = "xchain"

    # The configuration of how to invoke contracts using xchain. It is necessary when type is 'xchain'.
    [storage.blockchain.xchain]
        mnemonic = "臂 袁 饿 莫 新 棉 骗 矩 巨 愿 稍 造"
        contractName = "dstorage1"
        contractAccount = "XC7142093261616521@dstorage"
        chainAddress = "106.12.139.7:15022"
        chainName = "dstorage"

    # The configuration of how to invoke contracts using fabric. It is necessary when type is 'fabric'.
    [storage.blockchain.fabric]
        configFile = "./conf/fabric/config.yaml"
        channelId = "mychannel"
        chaincode = "mycc"
        userName = "Admin"
        orgName = "org1"

# Prover answers challenges from DataOwner to prove that the node is storing the slices
[storage.prover]
    # local storage path to keep temporary data
    localRoot = "/root/xdb/data/prove"

# The storage mode used by the storage node, currently supports local file system and IPFS.
[storage.mode]
    # Denotes what mode you choose, `local` or `ipfs`. 
    type = "local"
    [storage.mode.local]
        # Location of file fragments
        rootPath = "/root/xdb/data/slices"
    [storage.mode.ipfs]
        # Denotes peers in IPFS cluster
        hosts = [
            "127.0.0.1:5001",
            "127.0.0.1:5002"
        ]
        # The timeout for requesting IPFS, in milliseconds
        timeout = 5000

# The monitor will query new tasks in blockchain regularly, and trigger the task handler's operations
[storage.monitor]
    # Whether to monitor the challenge requests from the dataOwner node.
    challengingSwitch = "on"

    # Whether to monitor the node's change， such as  HeartBeat etc.
    nodemaintainerSwitch = "on"
    # Interval time of the node maintainer to clear file slice
    fileclearInterval = 24

#########################################################################
#
#   [log] sets the log related options
#
#########################################################################
[log]
level = "debug"
path = "./logs"
